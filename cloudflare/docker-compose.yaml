version: "3.8"

services:
  traefik:
    image: traefik:v3.0
    container_name: traefik
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    # networks:
    #   - proxy
    networks:
      - traefik_network
    ports:
      - 80:80
      - 443:443
      # - 443:443/tcp # Uncomment if you want HTTP3
      # - 443:443/udp # Uncomment if you want HTTP3
    environment:
      CF_DNS_API_TOKEN_FILE: /run/secrets/cf_api_token 
      # note using _FILE for docker secrets
      # CF_DNS_API_TOKEN: ${CF_DNS_API_TOKEN} # if using .env
      TRAEFIK_DASHBOARD_CREDENTIALS: ${TRAEFIK_DASHBOARD_CREDENTIALS}
    secrets:
      - cf_api_token
    env_file: .env # use .env
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      # - ./data/traefik.yml:/traefik.yml:ro
      # - ./data/acme.json:/acme.json

      # Modified to align to other samples
      - ./traefik.yml:/traefik.yml:ro
      - ./letsencrypt/acme.json:/acme.json
      # - ./data/config.yml:/config.yml:ro
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik.entrypoints=http"
      # - "traefik.http.routers.traefik.entrypoints=web" # entrypoint defined in traefik.yml
      # DNS Record for traefik.local.amksys.org REQUIRED
      - "traefik.http.routers.traefik.rule=Host(`traefik.local.amksys.org`)"
      - "traefik.http.middlewares.traefik-auth.basicauth.users=${TRAEFIK_DASHBOARD_CREDENTIALS}"
      - "traefik.http.middlewares.traefik-https-redirect.redirectscheme.scheme=https"
      - "traefik.http.middlewares.sslheader.headers.customrequestheaders.X-Forwarded-Proto=https"
      - "traefik.http.routers.traefik.middlewares=traefik-https-redirect"
      # - "traefik.http.routers.traefik-secure.entrypoints=https" # entrypoint defined in the traefik.yml
      - "traefik.http.routers.traefik-secure.entrypoints=websecure" # entrypoint defined in the traefik.yml
      # DNS Record for traefik.local.amksys.org REQUIRED
      - "traefik.http.routers.traefik-secure.rule=Host(`traefik.local.amksys.org`)"
      - "traefik.http.routers.traefik-secure.middlewares=traefik-auth"
      - "traefik.http.routers.traefik-secure.tls=true"
      # CertResolver to be 'myresolver' resolver defined in the traefik.yml
      - "traefik.http.routers.traefik-secure.tls.certresolver=myresolver"
      # DNS Record for local.amksys.org REQUIRED
      - "traefik.http.routers.traefik-secure.tls.domains[0].main=local.amksys.org"
      # DNS Record for *.local.amksys.org REQUIRED
      - "traefik.http.routers.traefik-secure.tls.domains[0].sans=*.local.amksys.org"
      - "traefik.http.routers.traefik-secure.service=api@internal"

  whoami:
    image: "traefik/whoami"
    container_name: "whoami-service"
    labels:
      - "traefik.enable=true"
      # The FQDN to be specified here for this container for routing traffic
      - "traefik.http.routers.whoami-service.rule=Host(`whoami.local.amksys.org`)"
      # - "traefik.http.routers.whoami-service.entrypoints=https" # entrypoints value is defined in traefik.yml
      - "traefik.http.routers.whoami-service.entrypoints=websecure" # entrypoints value is defined in traefik.yml
      # CertResolver to be 'myresolver' resolver defined in the traefik.yml
      - "traefik.http.routers.whoami-service.tls.certresolver=myresolver"
    networks:
      - traefik_network

  nginx:
    image: nginx:latest
    container_name: "nginx-service" 
    # [Best Practices] Container_name to match the router name like the following:
    # traefik.http.routers.<container_name:as a best practice>.*
    labels:
      - "traefik.enable=true"
      # The FQDN to be specified here for this container for routing traffic
      - "traefik.http.routers.nginx-service.rule=Host(`nginx.local.amksys.org`)"
      # - "traefik.http.routers.nginx-service.entrypoints=https" # entrypoints value is defined in traefik.yml
      - "traefik.http.routers.nginx-service.entrypoints=websecure" # entrypoints value is defined in traefik.yml
      # CertResolver to be 'myresolver' resolver defined in the traefik.yml
      - "traefik.http.routers.nginx-service.tls.certresolver=myresolver"
    volumes:
      - ./content:/usr/share/nginx/html
    restart: unless-stopped
    networks:
      - traefik_network

secrets:
  cf_api_token:
    file: ./secrets/cf_api_token.secret

# networks:
#   proxy:
#     external: true
# Internal Network to be common among all containers
networks:
  traefik_network:
    name: traefik_network
