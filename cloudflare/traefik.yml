log:
  #level: INFO  # Change to INFO for production
  level: DEBUG  # Change to INFO for production
api:
  dashboard: true
  debug: true
  #insecure: false  # Secure the dashboard in production
  insecure: true  # Secure the dashboard in production

# Original form the tutorial page
# entryPoints:
#   http:
#     address: ":80"
#     http:
#       redirections:
#         entryPoint:
#           to: https
#           scheme: https
#   https:
#     address: ":443"
entryPoints:
  web:
    address: :80
    http:
      redirections:
        entryPoint:
          to: websecure
          scheme: https
  websecure:
    address: ":443"
  # traefik:
  #   address: ":8080"

serversTransport:
  insecureSkipVerify: true
providers:
  docker:
    endpoint: "unix:///var/run/docker.sock"
    exposedByDefault: false
  # file:
  #   filename: /config.yml
certificatesResolvers:
  myresolver: # CertResolver name defined here (docker-compose.yaml labels should be refering to this!!)
    acme:
      email: luizcarloskazuyukifukaya@gmail.com
      storage: acme.json
      caServer: https://acme-v02.api.letsencrypt.org/directory # prod (default)
      # caServer: https://acme-staging-v02.api.letsencrypt.org/directory # staging
      # DNS Challenge for the Domain validation
      dnsChallenge:
        provider: cloudflare # provider named is defined by Traefik (check the official page)
        #disablePropagationCheck: true # uncomment this if you have issues pulling certificates through cloudflare, By setting this flag to true disables the need to wait for the propagation of the TXT record to all authoritative name servers.
        #delayBeforeCheck: 60s # uncomment along with disablePropagationCheck if needed to ensure the TXT record is ready before verification is attempted 
        resolvers:
          - "1.1.1.1:53"
          - "1.0.0.1:53"